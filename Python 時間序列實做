{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNScK75Zye+A5F3a0EIrZQp",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/0fuchung0/programming/blob/main/Python%20%E6%99%82%E9%96%93%E5%BA%8F%E5%88%97%E5%AF%A6%E5%81%9A\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Python 時間序列實做"
      ],
      "metadata": {
        "id": "xg8blqOU3cp8"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://www.finlab.tw/python-%E6%99%82%E9%96%93%E5%BA%8F%E5%88%97%E5%AF%A6%E4%BD%9C%EF%BC%81/"
      ],
      "metadata": {
        "id": "cLpl2m1n3csV"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "每日股價爬蟲"
      ],
      "metadata": {
        "id": "qBWUJGPI39R5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "from io import StringIO\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "def crawl_price(date):\n",
        "    r = requests.post('http://www.twse.com.tw/exchangeReport/MI_INDEX?response=csv&date=' + str(date).split(' ')[0].replace('-','') + '&type=ALL')\n",
        "    ret = pd.read_csv(StringIO(\"\\n\".join([i.translate({ord(c): None for c in ' '})\n",
        "                                        for i in r.text.split('\\n')\n",
        "                                        if len(i.split('\",')) == 17 and i[0] != '='])), header=0)\n",
        "    ret = ret.set_index('證券代號')\n",
        "    ret['成交金額'] = ret['成交金額'].str.replace(',','')\n",
        "    ret['成交股數'] = ret['成交股數'].str.replace(',','')\n",
        "    return ret"
      ],
      "metadata": {
        "id": "1Hjvy8xs3gwj"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "type(data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CpRpgwaQDSur",
        "outputId": "329d630b-4c11-4a54-c948-dd2e67309d45"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data[datetime.date(2023,7,17)]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "F4Tggp7hDSxS",
        "outputId": "d953a9be-771e-45b9-ebee-186b2ac75f02"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       證券名稱      成交股數    成交筆數        成交金額     開盤價     最高價     最低價     收盤價  \\\n",
              "證券代號                                                                        \n",
              "1101     台泥  19635471  11,288   722831068   37.00   37.10   36.70   36.75   \n",
              "1101B  台泥乙特      5068       8      243046   48.00   48.10   47.85   48.10   \n",
              "1102     亞泥   6387281   2,930   280789057   43.95   44.15   43.90   43.90   \n",
              "1103     嘉泥    716343     383    15268027   21.25   21.50   21.15   21.40   \n",
              "1104     環泥   2705864   1,048    84074842   31.00   31.40   30.80   31.15   \n",
              "...     ...       ...     ...         ...     ...     ...     ...     ...   \n",
              "9944     新麗    376553     205     8063705   21.20   21.70   21.15   21.50   \n",
              "9945    潤泰新   3929345   3,067   138994400   35.55   35.60   35.15   35.45   \n",
              "9946   三發地產     73263      85     1006054   13.80   13.85   13.65   13.70   \n",
              "9955     佳龍    261864     185     6103462   23.30   23.55   23.20   23.30   \n",
              "9958    世紀鋼  15709344   7,503  2339503364  145.00  151.50  145.00  149.00   \n",
              "\n",
              "      漲跌(+/-)  漲跌價差  最後揭示買價 最後揭示買量  最後揭示賣價 最後揭示賣量     本益比  Unnamed: 16  \n",
              "證券代號                                                                    \n",
              "1101        -  0.25   36.70  2,088   36.75     16   48.36          NaN  \n",
              "1101B       +  0.10   47.90      2   48.10      4    0.00          NaN  \n",
              "1102      NaN  0.00   43.90    275   43.95     23   12.80          NaN  \n",
              "1103        +  0.15   21.40     12   21.45     24    0.00          NaN  \n",
              "1104        +  0.60   31.10     68   31.15     53   11.45          NaN  \n",
              "...       ...   ...     ...    ...     ...    ...     ...          ...  \n",
              "9944        +  0.30   21.50      6   21.55      4    4.77          NaN  \n",
              "9945        -  0.10   35.40    126   35.45     98   20.03          NaN  \n",
              "9946        -  0.15   13.65     18   13.75      9   35.13          NaN  \n",
              "9955        -  0.20   23.30     16   23.35      4    0.00          NaN  \n",
              "9958        +  5.00  149.00    346  149.50    240  451.52          NaN  \n",
              "\n",
              "[1016 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-5d9d858f-b1da-4985-b2c5-a6154c36cc0e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>證券名稱</th>\n",
              "      <th>成交股數</th>\n",
              "      <th>成交筆數</th>\n",
              "      <th>成交金額</th>\n",
              "      <th>開盤價</th>\n",
              "      <th>最高價</th>\n",
              "      <th>最低價</th>\n",
              "      <th>收盤價</th>\n",
              "      <th>漲跌(+/-)</th>\n",
              "      <th>漲跌價差</th>\n",
              "      <th>最後揭示買價</th>\n",
              "      <th>最後揭示買量</th>\n",
              "      <th>最後揭示賣價</th>\n",
              "      <th>最後揭示賣量</th>\n",
              "      <th>本益比</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>證券代號</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1101</th>\n",
              "      <td>台泥</td>\n",
              "      <td>19635471</td>\n",
              "      <td>11,288</td>\n",
              "      <td>722831068</td>\n",
              "      <td>37.00</td>\n",
              "      <td>37.10</td>\n",
              "      <td>36.70</td>\n",
              "      <td>36.75</td>\n",
              "      <td>-</td>\n",
              "      <td>0.25</td>\n",
              "      <td>36.70</td>\n",
              "      <td>2,088</td>\n",
              "      <td>36.75</td>\n",
              "      <td>16</td>\n",
              "      <td>48.36</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1101B</th>\n",
              "      <td>台泥乙特</td>\n",
              "      <td>5068</td>\n",
              "      <td>8</td>\n",
              "      <td>243046</td>\n",
              "      <td>48.00</td>\n",
              "      <td>48.10</td>\n",
              "      <td>47.85</td>\n",
              "      <td>48.10</td>\n",
              "      <td>+</td>\n",
              "      <td>0.10</td>\n",
              "      <td>47.90</td>\n",
              "      <td>2</td>\n",
              "      <td>48.10</td>\n",
              "      <td>4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1102</th>\n",
              "      <td>亞泥</td>\n",
              "      <td>6387281</td>\n",
              "      <td>2,930</td>\n",
              "      <td>280789057</td>\n",
              "      <td>43.95</td>\n",
              "      <td>44.15</td>\n",
              "      <td>43.90</td>\n",
              "      <td>43.90</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.00</td>\n",
              "      <td>43.90</td>\n",
              "      <td>275</td>\n",
              "      <td>43.95</td>\n",
              "      <td>23</td>\n",
              "      <td>12.80</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1103</th>\n",
              "      <td>嘉泥</td>\n",
              "      <td>716343</td>\n",
              "      <td>383</td>\n",
              "      <td>15268027</td>\n",
              "      <td>21.25</td>\n",
              "      <td>21.50</td>\n",
              "      <td>21.15</td>\n",
              "      <td>21.40</td>\n",
              "      <td>+</td>\n",
              "      <td>0.15</td>\n",
              "      <td>21.40</td>\n",
              "      <td>12</td>\n",
              "      <td>21.45</td>\n",
              "      <td>24</td>\n",
              "      <td>0.00</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1104</th>\n",
              "      <td>環泥</td>\n",
              "      <td>2705864</td>\n",
              "      <td>1,048</td>\n",
              "      <td>84074842</td>\n",
              "      <td>31.00</td>\n",
              "      <td>31.40</td>\n",
              "      <td>30.80</td>\n",
              "      <td>31.15</td>\n",
              "      <td>+</td>\n",
              "      <td>0.60</td>\n",
              "      <td>31.10</td>\n",
              "      <td>68</td>\n",
              "      <td>31.15</td>\n",
              "      <td>53</td>\n",
              "      <td>11.45</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9944</th>\n",
              "      <td>新麗</td>\n",
              "      <td>376553</td>\n",
              "      <td>205</td>\n",
              "      <td>8063705</td>\n",
              "      <td>21.20</td>\n",
              "      <td>21.70</td>\n",
              "      <td>21.15</td>\n",
              "      <td>21.50</td>\n",
              "      <td>+</td>\n",
              "      <td>0.30</td>\n",
              "      <td>21.50</td>\n",
              "      <td>6</td>\n",
              "      <td>21.55</td>\n",
              "      <td>4</td>\n",
              "      <td>4.77</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9945</th>\n",
              "      <td>潤泰新</td>\n",
              "      <td>3929345</td>\n",
              "      <td>3,067</td>\n",
              "      <td>138994400</td>\n",
              "      <td>35.55</td>\n",
              "      <td>35.60</td>\n",
              "      <td>35.15</td>\n",
              "      <td>35.45</td>\n",
              "      <td>-</td>\n",
              "      <td>0.10</td>\n",
              "      <td>35.40</td>\n",
              "      <td>126</td>\n",
              "      <td>35.45</td>\n",
              "      <td>98</td>\n",
              "      <td>20.03</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9946</th>\n",
              "      <td>三發地產</td>\n",
              "      <td>73263</td>\n",
              "      <td>85</td>\n",
              "      <td>1006054</td>\n",
              "      <td>13.80</td>\n",
              "      <td>13.85</td>\n",
              "      <td>13.65</td>\n",
              "      <td>13.70</td>\n",
              "      <td>-</td>\n",
              "      <td>0.15</td>\n",
              "      <td>13.65</td>\n",
              "      <td>18</td>\n",
              "      <td>13.75</td>\n",
              "      <td>9</td>\n",
              "      <td>35.13</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9955</th>\n",
              "      <td>佳龍</td>\n",
              "      <td>261864</td>\n",
              "      <td>185</td>\n",
              "      <td>6103462</td>\n",
              "      <td>23.30</td>\n",
              "      <td>23.55</td>\n",
              "      <td>23.20</td>\n",
              "      <td>23.30</td>\n",
              "      <td>-</td>\n",
              "      <td>0.20</td>\n",
              "      <td>23.30</td>\n",
              "      <td>16</td>\n",
              "      <td>23.35</td>\n",
              "      <td>4</td>\n",
              "      <td>0.00</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9958</th>\n",
              "      <td>世紀鋼</td>\n",
              "      <td>15709344</td>\n",
              "      <td>7,503</td>\n",
              "      <td>2339503364</td>\n",
              "      <td>145.00</td>\n",
              "      <td>151.50</td>\n",
              "      <td>145.00</td>\n",
              "      <td>149.00</td>\n",
              "      <td>+</td>\n",
              "      <td>5.00</td>\n",
              "      <td>149.00</td>\n",
              "      <td>346</td>\n",
              "      <td>149.50</td>\n",
              "      <td>240</td>\n",
              "      <td>451.52</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1016 rows × 16 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5d9d858f-b1da-4985-b2c5-a6154c36cc0e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-ff58546c-10e7-4312-a3b8-4493dc3215e5\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff58546c-10e7-4312-a3b8-4493dc3215e5')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-ff58546c-10e7-4312-a3b8-4493dc3215e5 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5d9d858f-b1da-4985-b2c5-a6154c36cc0e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5d9d858f-b1da-4985-b2c5-a6154c36cc0e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "呼叫每日爬蟲，連續爬 n 天"
      ],
      "metadata": {
        "id": "jXpLuNAJ7zCW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import datetime\n",
        "import time\n",
        "\n",
        "data = {}\n",
        "n_days = 9\n",
        "date = datetime.datetime.now()\n",
        "fail_count = 0\n",
        "allow_continuous_fail_count = 5\n",
        "while len(data) < n_days:\n",
        "\n",
        "    print('parsing', date)\n",
        "    # 使用 crawPrice 爬資料\n",
        "    try:\n",
        "        # 抓資料\n",
        "        data[date.date()] = crawl_price(date)\n",
        "        print('success!')\n",
        "        fail_count = 0\n",
        "    except:\n",
        "        # 假日爬不到\n",
        "        print('fail! check the date is holiday')\n",
        "        fail_count += 1\n",
        "        if fail_count == allow_continuous_fail_count:\n",
        "            raise\n",
        "            break\n",
        "\n",
        "    # 減一天\n",
        "    date -= datetime.timedelta(days=1)\n",
        "    time.sleep(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JT5IxnjE75kO",
        "outputId": "1b646834-bb0e-43ef-c2e0-99d6e523d772"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "parsing 2023-07-18 02:58:49.164856\n",
            "fail! check the date is holiday\n",
            "parsing 2023-07-17 02:58:49.164856\n",
            "success!\n",
            "parsing 2023-07-16 02:58:49.164856\n",
            "fail! check the date is holiday\n",
            "parsing 2023-07-15 02:58:49.164856\n",
            "fail! check the date is holiday\n",
            "parsing 2023-07-14 02:58:49.164856\n",
            "success!\n",
            "parsing 2023-07-13 02:58:49.164856\n",
            "success!\n",
            "parsing 2023-07-12 02:58:49.164856\n",
            "success!\n",
            "parsing 2023-07-11 02:58:49.164856\n",
            "success!\n",
            "parsing 2023-07-10 02:58:49.164856\n",
            "success!\n",
            "parsing 2023-07-09 02:58:49.164856\n",
            "fail! check the date is holiday\n",
            "parsing 2023-07-08 02:58:49.164856\n",
            "fail! check the date is holiday\n",
            "parsing 2023-07-07 02:58:49.164856\n",
            "success!\n",
            "parsing 2023-07-06 02:58:49.164856\n",
            "success!\n",
            "parsing 2023-07-05 02:58:49.164856\n",
            "success!\n"
          ]
        }
      ]
    }
  ]
}